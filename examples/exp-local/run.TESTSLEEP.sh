#!/bin/bash 

rm -rf "run.dpp-local-nc32_gl2-test.warmup.cfg"

job0_0=$(sbatch --job-name="info.before.dpp-local-nc32_gl2-test.warmup.cfg" -w GreenLab-STF -n 1 collect-info.before.sh "run.dpp-local-nc32_gl2-test.warmup.cfg" | awk '{{print $NF}}')
job0_1=$(sbatch --job-name="dpp-local-nc32_gl2-test.warmup.cfg" -w GreenLab-STF -n 32 --dependency=afterany:$job0_0 --wrap="(perf stat -e power/energy-pkg/,power/energy-ram/ sleep 10 && echo 10 > run.dpp-local-nc32_gl2-test.warmup.cfg.info/haddock.output.log) > run.dpp-local-nc32_gl2-test.warmup.cfg.info/perf_stat.txt 2>&1" | awk '{{print $NF}}')
job0_2=$(sbatch --job-name="info.after.dpp-local-nc32_gl2-test.warmup.cfg" -w GreenLab-STF -n 1 --dependency=afterany:$job0_1 collect-info.after.sh "run.dpp-local-nc32_gl2-test.warmup.cfg" | awk '{{print $NF}}')
job1_0=$(sbatch --job-name="info.before.daa-local-nc4_gl2-test.cfg" -w GreenLab-STF -n 1 --dependency=afterany:$job0_2 collect-info.before.sh "run.daa-local-nc4_gl2-test.cfg" | awk '{{print $NF}}')
job1_1=$(sbatch --job-name="daa-local-nc4_gl2-test.cfg" -w GreenLab-STF -n 4 --dependency=afterany:$job1_0 --wrap="(perf stat -e power/energy-pkg/,power/energy-ram/ sleep 10 && echo 10 > run.daa-local-nc4_gl2-test.cfg.info/haddock.output.log) > run.daa-local-nc4_gl2-test.cfg.info/perf_stat.txt 2>&1" | awk '{{print $NF}}')
job1_2=$(sbatch --job-name="info.after.daa-local-nc4_gl2-test.cfg" -w GreenLab-STF -n 1 --dependency=afterany:$job1_1 collect-info.after.sh "run.daa-local-nc4_gl2-test.cfg" | awk '{{print $NF}}')
cat > check.TESTSLEEP.sh << EOF
#!/bin/bash
echo $job1_1
sacct -o jobid,jobname%60,cluster,Node%24,state,start,end,ConsumedEnergy,AveRSS,AveDiskRead,AveDiskWrite,AveVMSize,SystemCPU,UserCPU,AveCPU,elapsed,NCPUS,Account%100,AdminComment%100,AllocCPUS%100,AllocNodes%100,AllocTRES%100,AssocID%100,AveCPUFreq%100,AvePages%100,BlockID%100,Comment%100,Constraints%100,ConsumedEnergyRaw%100,Container%100,CPUTime%100,CPUTimeRAW%100,DBIndex%100,DerivedExitCode%100,ElapsedRaw%100,Eligible%100,ExitCode%100,FailedNode%100,Flags%100,GID%100,Group%100,JobIDRaw%100,Layout%100,MaxDiskRead%100,MaxDiskReadNode%100,MaxDiskReadTask%100,MaxDiskWrite%100,MaxDiskWriteNode%100,MaxDiskWriteTask%100,MaxPages%100,MaxPagesNode%100,MaxPagesTask%100,MaxRSS%100,MaxRSSNode%100,MaxRSSTask%100,MaxVMSize%100,MaxVMSizeNode%100,MaxVMSizeTask%100,McsLabel%100,MinCPU%100,MinCPUNode%100,MinCPUTask%100,NNodes%100,NodeList%100,NTasks%100,Partition%100,Planned%100,PlannedCPU%100,PlannedCPURAW%100,Priority%100,QOS%100,QOSRAW%100,Reason%100,ReqCPUFreq%100,ReqCPUFreqGov%100,ReqCPUFreqMax%100,ReqCPUFreqMin%100,ReqCPUS%100,ReqMem%100,ReqNodes%100,ReqTRES%100,Reservation%100,ReservationId%100,Suspended%100,SystemComment%100,Timelimit%100,TimelimitRaw%100,TotalCPU%100,TRESUsageInAve%100,TRESUsageInMax%100,TRESUsageInMaxNode%100,TRESUsageInMaxTask%100,TRESUsageInMin%100,TRESUsageInMinNode%100,TRESUsageInMinTask%100,TRESUsageInTot%100,TRESUsageOutAve%100,TRESUsageOutMax%100,TRESUsageOutMaxNode%100,TRESUsageOutMaxTask%100,TRESUsageOutMin%100,TRESUsageOutMinNode%100,TRESUsageOutMinTask%100,TRESUsageOutTot%100,UID%100,User%100,WCKey%100,WCKeyID%100,WorkDir%100,Submit%100,SubmitLine%500 -j $job1_1 > data.TESTSLEEP.txt
cat data.TESTSLEEP.txt
EOF

cat > check.full.TESTSLEEP.sh << EOF
#!/bin/bash
echo $job0_0,$job0_1,$job0_2,$job1_0,$job1_1,$job1_2
sacct -o jobid,jobname%60,cluster,Node%24,state,start,end,ConsumedEnergy,AveRSS,AveDiskRead,AveDiskWrite,AveVMSize,SystemCPU,UserCPU,AveCPU,elapsed,NCPUS,Account%100,AdminComment%100,AllocCPUS%100,AllocNodes%100,AllocTRES%100,AssocID%100,AveCPUFreq%100,AvePages%100,BlockID%100,Comment%100,Constraints%100,ConsumedEnergyRaw%100,Container%100,CPUTime%100,CPUTimeRAW%100,DBIndex%100,DerivedExitCode%100,ElapsedRaw%100,Eligible%100,ExitCode%100,FailedNode%100,Flags%100,GID%100,Group%100,JobIDRaw%100,Layout%100,MaxDiskRead%100,MaxDiskReadNode%100,MaxDiskReadTask%100,MaxDiskWrite%100,MaxDiskWriteNode%100,MaxDiskWriteTask%100,MaxPages%100,MaxPagesNode%100,MaxPagesTask%100,MaxRSS%100,MaxRSSNode%100,MaxRSSTask%100,MaxVMSize%100,MaxVMSizeNode%100,MaxVMSizeTask%100,McsLabel%100,MinCPU%100,MinCPUNode%100,MinCPUTask%100,NNodes%100,NodeList%100,NTasks%100,Partition%100,Planned%100,PlannedCPU%100,PlannedCPURAW%100,Priority%100,QOS%100,QOSRAW%100,Reason%100,ReqCPUFreq%100,ReqCPUFreqGov%100,ReqCPUFreqMax%100,ReqCPUFreqMin%100,ReqCPUS%100,ReqMem%100,ReqNodes%100,ReqTRES%100,Reservation%100,ReservationId%100,Suspended%100,SystemComment%100,Timelimit%100,TimelimitRaw%100,TotalCPU%100,TRESUsageInAve%100,TRESUsageInMax%100,TRESUsageInMaxNode%100,TRESUsageInMaxTask%100,TRESUsageInMin%100,TRESUsageInMinNode%100,TRESUsageInMinTask%100,TRESUsageInTot%100,TRESUsageOutAve%100,TRESUsageOutMax%100,TRESUsageOutMaxNode%100,TRESUsageOutMaxTask%100,TRESUsageOutMin%100,TRESUsageOutMinNode%100,TRESUsageOutMinTask%100,TRESUsageOutTot%100,UID%100,User%100,WCKey%100,WCKeyID%100,WorkDir%100,Submit%100,SubmitLine%500 -j $job0_0,$job0_1,$job0_2,$job1_0,$job1_1,$job1_2 > data.full.TESTSLEEP.txt
cat data.full.TESTSLEEP.txt
EOF
